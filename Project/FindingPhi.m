clc; clear all; close all;
syms phixx(t) phixy(t) phixz(t) phixvx(t) phixvy(t) phixvz(t) phixroll(t) phixpitch(t) phixyaw(t) phixp(t) phixq(t) phixr(t)
syms phiyx(t) phiyy(t) phiyz(t) phiyvx(t) phiyvy(t) phiyvz(t) phiyroll(t) phiypitch(t) phiyyaw(t) phiyp(t) phiyq(t) phiyr(t)
syms phizx(t) phizy(t) phizz(t) phizvx(t) phizvy(t) phizvz(t) phizroll(t) phizpitch(t) phizyaw(t) phizp(t) phizq(t) phizr(t)
syms phivxx(t) phivxy(t) phivxz(t) phivxvx(t) phivxvy(t) phivxvz(t) phivxroll(t) phivxpitch(t) phivxyaw(t) phivxp(t) phivxq(t) phivxr(t)
syms phivyx(t) phivyy(t) phivyz(t) phivyvx(t) phivyvy(t) phivyvz(t) phivyroll(t) phivypitch(t) phivyyaw(t) phivyp(t) phivyq(t) phivyr(t)
syms phivzx(t) phivzy(t) phivzz(t) phivzvx(t) phivzvy(t) phivzvz(t) phivzroll(t) phivzpitch(t) phivzyaw(t) phivzp(t) phivzq(t) phivzr(t)
syms phirollx(t) phirolly(t) phirollz(t) phirollvx(t) phirollvy(t) phirollvz(t) phirollroll(t) phirollpitch(t) phirollyaw(t) phirollp(t) phirollq(t) phirollr(t)
syms phipitchx(t) phipitchy(t) phipitchz(t) phipitchvx(t) phipitchvy(t) phipitchvz(t) phipitchroll(t) phipitchpitch(t) phipitchyaw(t) phipitchp(t) phipitchq(t) phipitchr(t)
syms phiyawx(t) phiyawy(t) phiyawz(t) phiyawvx(t) phiyawvy(t) phiyawvz(t) phiyawroll(t) phiyawpitch(t) phiyawyaw(t) phiyawp(t) phiyawq(t) phiyawr(t)
syms phipx(t) phipy(t) phipz(t) phipvx(t) phipvy(t) phipvz(t) phiproll(t) phippitch(t) phipyaw(t) phipp(t) phipq(t) phipr(t)
syms phiqx(t) phiqy(t) phiqz(t) phiqvx(t) phiqvy(t) phiqvz(t) phiqroll(t) phiqpitch(t) phiqyaw(t) phiqp(t) phiqq(t) phiqr(t)
syms phirx(t) phiry(t) phirz(t) phirvx(t) phirvy(t) phirvz(t) phirroll(t) phirpitch(t) phiryaw(t) phirp(t) phirq(t) phirr(t)
syms u3(t) roll(t) yaw(t) pitch(t) m pitch_rate(t) yaw_rate(t) Iyy Izz Ixx roll_rate(t)
Phi = [phixx phixy phixz phixvx phixvy phixvz phixroll phixpitch phixyaw phixp phixq phixr;
       phiyx phiyy phiyz phiyvx phiyvy phiyvz phiyroll phiypitch phiyyaw phiyp phiyq phiyr;
       phizx phizy phizz phizvx phizvy phizvz phizroll phizpitch phizyaw phizp phizq phizr;
       phivxx phivxy phivxz phivxvx phivxvy phivxvz phivxroll phivxpitch phivxyaw phivxp phivxq phivxr;
       phivyx phivyy phivyz phivyvx phivyvy phivyvz phivyroll phivypitch phivyyaw phivyp phivyq phivyr;
       phivzx phivzy phivzz phivzvx phivzvy phivzvz phivzroll phivzpitch phivzyaw phivzp phivzq phivzr;
       phirollx phirolly phirollz phirollvx phirollvy phirollvz phirollroll phirollpitch phirollyaw phirollp phirollq phirollr;
       phipitchx phipitchy phipitchz phipitchvx phipitchvy phipitchvz phipitchroll phipitchpitch phipitchyaw phipitchp phipitchq phipitchr;
       phiyawx phiyawy phiyawz phiyawvx phiyawvy phiyawvz phiyawroll phiyawpitch phiyawyaw phiyawp phiyawq phiyawr;
       phipx phipy phipz phipvx phipvy phipvz phiproll phippitch phipyaw phipp phipq phipr;
       phiqx phiqy phiqz phiqvx phiqvy phiqvz phiqroll phiqpitch phiqyaw phiqp phiqq phiqr;
       phirx phiry phirz phirvx phirvy phirvz phirroll phirpitch phiryaw phirp phirq phirr];
A =[0, 0, 0, 1, 0, 0,                                                                   0,                                                                                             0,                                                           0,                                     0,                                   0,                                     0;
    0, 0, 0, 0, 1, 0,                                                                   0,                                                                                             0,                                                           0,                                     0,                                   0,                                     0;
    0, 0, 0, 0, 0, 1,                                                                   0,                                                                                             0,                                                           0,                                     0,                                   0,                                     0;
    0, 0, 0, 0, 0, 0,         (u3*(cos(roll)*sin(yaw) - cos(yaw)*sin(pitch)*sin(roll)))/m,                                                          (u3*cos(pitch)*cos(roll)*cos(yaw))/m, (u3*(cos(yaw)*sin(roll) - cos(roll)*sin(pitch)*sin(yaw)))/m,                                     0,                                   0,                                     0;
    0, 0, 0, 0, 0, 0,        -(u3*(cos(roll)*cos(yaw) + sin(pitch)*sin(roll)*sin(yaw)))/m,                                                          (u3*cos(pitch)*cos(roll)*sin(yaw))/m, (u3*(sin(roll)*sin(yaw) + cos(roll)*cos(yaw)*sin(pitch)))/m,                                     0,                                   0,                                     0;
    0, 0, 0, 0, 0, 0,                                        -(u3*cos(pitch)*sin(roll))/m,                                                                  -(u3*cos(roll)*sin(pitch))/m,                                                           0,                                     0,                                   0,                                     0;
    0, 0, 0, 0, 0, 0,     pitch_rate*cos(roll)*tan(pitch) - yaw_rate*tan(pitch)*sin(roll),               yaw_rate*cos(roll)*(tan(pitch)^2 + 1) + pitch_rate*sin(roll)*(tan(pitch)^2 + 1),                                                           0,                                     1,                tan(pitch)*sin(roll),                  cos(roll)*tan(pitch);
    0, 0, 0, 0, 0, 0,                         - yaw_rate*cos(roll) - pitch_rate*sin(roll),                                                                                             0,                                                           0,                                     0,                           cos(roll),                            -sin(roll);
    0, 0, 0, 0, 0, 0, (pitch_rate*cos(roll))/cos(pitch) - (yaw_rate*sin(roll))/cos(pitch), (yaw_rate*cos(roll)*sin(pitch))/cos(pitch)^2 + (pitch_rate*sin(pitch)*sin(roll))/cos(pitch)^2,                                                           0,                                     0,                sin(roll)/cos(pitch),                  cos(roll)/cos(pitch);
    0, 0, 0, 0, 0, 0,                                                                   0,                                                                                             0,                                                           0,                                     0,   (Iyy*yaw_rate - Izz*yaw_rate)/Ixx, (Iyy*pitch_rate - Izz*pitch_rate)/Ixx;
    0, 0, 0, 0, 0, 0,                                                                   0,                                                                                             0,                                                           0,    -(Ixx*yaw_rate - Izz*yaw_rate)/Iyy,                                   0,  -(Ixx*roll_rate - Izz*roll_rate)/Iyy;
    0, 0, 0, 0, 0, 0,                                                                   0,                                                                                             0,                                                           0, (Ixx*pitch_rate - Iyy*pitch_rate)/Izz, (Ixx*roll_rate - Iyy*roll_rate)/Izz,                                     0];
conds = [phixx(0)==1; phixy(0)==0; phixz(0)==0; phixvx(0)==0; phixvy(0)==0; phixvz(0)==0; phixroll(0)==0; phixpitch(0)==0; phixyaw(0)==0; phixp(0)==0; phixq(0)==0; phixr(0)==0; phiyx(0)==0; phiyy(0)==1; phiyz(0)==0; phiyvx(0)==0; phiyvy(0)==0; phiyvz(0)==0; phiyroll(0)==0; phiypitch(0)==0; phiyyaw(0)==0; phiyp(0)==0; phiyq(0)==0; phiyr(0)==0; phizx(0)==0; phizy(0)==0; phizz(0)==1; phizvx(0)==0; phizvy(0)==0; phizvz(0)==0; phizroll(0)==0; phizpitch(0)==0; phizyaw(0)==0; phizp(0)==0; phizq(0)==0; phizr(0)==0; phivxx(0)==0; phivxy(0)==0; phivxz(0)==0; phivxvx(0)==1; phivxvy(0)==0; phivxvz(0)==0; phivxroll(0)==0; phivxpitch(0)==0; phivxyaw(0)==0; phivxp(0)==0; phivxq(0)==0; phivxr(0)==0; phivyx(0)==0; phivyy(0)==0; phivyz(0)==0; phivyvx(0)==0; phivyvy(0)==1; phivyvz(0)==0; phivyroll(0)==0; phivypitch(0)==0; phivyyaw(0)==0; phivyp(0)==0; phivyq(0)==0; phivyr(0)==0; phivzx(0)==0; phivzy(0)==0; phivzz(0)==0; phivzvx(0)==0; phivzvy(0)==0; phivzvz(0)==1; phivzroll(0)==0; phivzpitch(0)==0; phivzyaw(0)==0; phivzp(0)==0; phivzq(0)==0; phivzr(0)==0; phirollx(0)==0; phirolly(0)==0; phirollz(0)==0; phirollvx(0)==0; phirollvy(0)==0; phirollvz(0)==0; phirollroll(0)==1; phirollpitch(0)==0; phirollyaw(0)==0; phirollp(0)==0; phirollq(0)==0; phirollr(0)==0; phipitchx(0)==0; phipitchy(0)==0; phipitchz(0)==0; phipitchvx(0)==0; phipitchvy(0)==0; phipitchvz(0)==0; phipitchroll(0)==0; phipitchpitch(0)==1; phipitchyaw(0)==0; phipitchp(0)==0; phipitchq(0)==0; phipitchr(0)==0; phiyawx(0)==0; phiyawy(0)==0; phiyawz(0)==0; phiyawvx(0)==0; phiyawvy(0)==0; phiyawvz(0)==0; phiyawroll(0)==0; phiyawpitch(0)==0; phiyawyaw(0)==1; phiyawp(0)==0; phiyawq(0)==0; phiyawr(0)==0; phipx(0)==0; phipy(0)==0; phipz(0)==0; phipvx(0)==0; phipvy(0)==0; phipvz(0)==0; phiproll(0)==0; phippitch(0)==0; phipyaw(0)==0; phipp(0)==1; phipq(0)==0; phipr(0)==0; phiqx(0)==0; phiqy(0)==0; phiqz(0)==0; phiqvx(0)==0; phiqvy(0)==0; phiqvz(0)==0; phiqroll(0)==0; phiqpitch(0)==0; phiqyaw(0)==0; phiqp(0)==0; phiqq(0)==1; phiqr(0)==0; phirx(0)==0; phiry(0)==0; phirz(0)==0; phirvx(0)==0; phirvy(0)==0; phirvz(0)==0; phirroll(0)==0; phirpitch(0)==0; phiryaw(0)==0; phirp(0)==0; phirq(0)==0; phirr(0)==1];
sol = dsolve(diff(Phi, t) == A*Phi, conds)